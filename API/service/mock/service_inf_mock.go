// Code generated by MockGen. DO NOT EDIT.
// Source: ./inf.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	models "inititaryplanner/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAttractionDal is a mock of AttractionDal interface.
type MockAttractionDal struct {
	ctrl     *gomock.Controller
	recorder *MockAttractionDalMockRecorder
}

// MockAttractionDalMockRecorder is the mock recorder for MockAttractionDal.
type MockAttractionDalMockRecorder struct {
	mock *MockAttractionDal
}

// NewMockAttractionDal creates a new mock instance.
func NewMockAttractionDal(ctrl *gomock.Controller) *MockAttractionDal {
	mock := &MockAttractionDal{ctrl: ctrl}
	mock.recorder = &MockAttractionDalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttractionDal) EXPECT() *MockAttractionDalMockRecorder {
	return m.recorder
}

// CreateAttraction mocks base method.
func (m *MockAttractionDal) CreateAttraction(ctx context.Context, attraction *models.CreateAttractionReq) (*models.CreateAttractionResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAttraction", ctx, attraction)
	ret0, _ := ret[0].(*models.CreateAttractionResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAttraction indicates an expected call of CreateAttraction.
func (mr *MockAttractionDalMockRecorder) CreateAttraction(ctx, attraction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAttraction", reflect.TypeOf((*MockAttractionDal)(nil).CreateAttraction), ctx, attraction)
}
