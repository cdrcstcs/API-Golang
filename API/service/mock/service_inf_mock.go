// Code generated by MockGen. DO NOT EDIT.
// Source: ./inf.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	models "inititaryplanner/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAttractionService is a mock of AttractionService interface.
type MockAttractionService struct {
	ctrl     *gomock.Controller
	recorder *MockAttractionServiceMockRecorder
}

// MockAttractionServiceMockRecorder is the mock recorder for MockAttractionService.
type MockAttractionServiceMockRecorder struct {
	mock *MockAttractionService
}

// NewMockAttractionService creates a new mock instance.
func NewMockAttractionService(ctrl *gomock.Controller) *MockAttractionService {
	mock := &MockAttractionService{ctrl: ctrl}
	mock.recorder = &MockAttractionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttractionService) EXPECT() *MockAttractionServiceMockRecorder {
	return m.recorder
}

// CreateAttraction mocks base method.
func (m *MockAttractionService) CreateAttraction(ctx context.Context, req *models.CreateAttractionReq) (*models.CreateAttractionResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAttraction", ctx, req)
	ret0, _ := ret[0].(*models.CreateAttractionResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAttraction indicates an expected call of CreateAttraction.
func (mr *MockAttractionServiceMockRecorder) CreateAttraction(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAttraction", reflect.TypeOf((*MockAttractionService)(nil).CreateAttraction), ctx, req)
}
